// KODEON Quantum Computing - CNOT Gate
// Implementation of the Controlled NOT gate

// CNOT Gate
kelas GerbangCNOT:
    fungsi inisialisasi():
        // CNOT = [[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 1], [0, 0, 1, 0]]
        // This is a 4x4 matrix for 2-qubit operation
        induk.inisialisasi("CNOT", [
            [1, 0, 0, 0],
            [0, 1, 0, 0],
            [0, 0, 0, 1],
            [0, 0, 1, 0]
        ], 2)

    // Apply the CNOT gate
    fungsi terapkan(keadaan_2qubit):
        induk.terapkan(keadaan_2qubit)
        // CNOT|00⟩ = |00⟩
        // CNOT|01⟩ = |01⟩
        // CNOT|10⟩ = |11⟩
        // CNOT|11⟩ = |10⟩

        buat hasil = [...keadaan_2qubit]
        hasil[2] = keadaan_2qubit[3]  // |10⟩ component
        hasil[3] = keadaan_2qubit[2]  // |11⟩ component
        kembalikan hasil

ekspor GerbangCNOT

// Controlled Z Gate
kelas GerbangCZ:
    fungsi inisialisasi():
        // CZ = [[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, -1]]
        induk.inisialisasi("CZ", [
            [1, 0, 0, 0],
            [0, 1, 0, 0],
            [0, 0, 1, 0],
            [0, 0, 0, -1]
        ], 2)

    // Apply the CZ gate
    fungsi terapkan(keadaan_2qubit):
        induk.terapkan(keadaan_2qubit)
        // CZ|00⟩ = |00⟩
        // CZ|01⟩ = |01⟩
        // CZ|10⟩ = |10⟩
        // CZ|11⟩ = -|11⟩

        buat hasil = [...keadaan_2qubit]
        hasil[3] = keadaan_2qubit[3] * (-1)  // |11⟩ component gets negative
        kembalikan hasil

ekspor GerbangCZ

// Toffoli Gate (CCNOT)
kelas GerbangToffoli:
    fungsi inisialisasi():
        // Toffoli is a 3-qubit gate
        // Implementation would require an 8x8 matrix
        induk.inisialisasi("Toffoli", "matriks_8x8", 3)

    // Apply the Toffoli gate
    fungsi terapkan(keadaan_3qubit):
        induk.terapkan(keadaan_3qubit)
        // Toffoli flips the target qubit if both control qubits are |1⟩
        // For simulation, we'll just return the state unchanged
        kembalikan keadaan_3qubit

ekspor GerbangToffoli
